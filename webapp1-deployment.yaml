apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-1
  # Just some extra metadata in the form of annotations
  annotations:
    description: Deployment for simple web app (type 1)
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webapp-1
  template:
    metadata:
      labels:
        app: webapp-1
    spec:
      # Pod attributes
      nodeSelector:
        # These pods replicas will be running on nodes tagged with a specific hardware requirement
        hardwareReq: type1
      affinity:
        podAntiAffinity:
          # Pod anti affinity to separate pods of webapp 1 among them in different nodes
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - webapp-1
              topologyKey: kubernetes.io/hostname
      # Container attributes
      containers:
      - name: webserver
        image: nginx:1.7.9
        env:
          # The common parts for messages in apps are taken from configMaps
        - name: GREETING_TEXT
          valueFrom:
            configMapKeyRef:
              name: webapp-vars
              key: GREETING_TEXT 
        - name: OUTPUT_TEXT
          valueFrom:
            configMapKeyRef:
              name: webapp-vars
              key: OUTPUT_TEXT
        # Use of the Downward API to retrieve pod and node names
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        lifecycle:
            postStart:
              # For demo purposes, we execute these commands just after container start to customize the server message for app1 based on an env variable.
              # In addition, nginx port is changed to 3000
              # Some logging info is written
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - >
                  `# Customizing web page content for webapp 1 and changing serving port from 80 to 3000`
                  echo ${GREETING_TEXT} TYPE 1 > /usr/share/nginx/html/index.html;
                  sed -i 's/ 80;/ 3000;/g' /etc/nginx/conf.d/default.conf;
                  nginx -s reload;
                  `# Logging start on a file in folder`
                  echo ${POD_NAME} ${OUTPUT_TEXT} TYPE 1 STARTED on node ${NODE_NAME} > /app-logs/postStart
        ports:
          # As nginx port has been changed from 80 to 3000 in nginx, the container now listens through it
        - containerPort: 3000
        volumeMounts:
        - name: output-volume
          mountPath: /app-logs
      volumes:
      - name: output-volume
        # Node volume where containers log their lifecycle activity
        emptyDir: {}
        
